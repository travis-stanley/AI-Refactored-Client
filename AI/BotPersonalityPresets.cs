// <auto-generated>
//   This file is part of AI-Refactored, an open-source project focused on realistic AI behavior in Escape from Tarkov.
//   Licensed under the MIT License. See LICENSE in the repository root for more information.
//
//   THIS FILE IS SYSTEMATICALLY MANAGED.
//   Failures in AIRefactored logic must always trigger safe fallback to EFT base AI.
//   Realism Pass: Now includes Awareness, HearingBias, StanceBias. All clamps and blending upgraded.
// </auto-generated>

namespace AIRefactored.AI
{
    using System;
    using System.Collections.Generic;
    using UnityEngine;

    /// <summary>
    /// Provides randomized, personality-based bot profile presets.
    /// Supports type-driven defaults blended with organic trait variance.
    /// </summary>
    public static class BotPersonalityPresets
    {
        /// <summary>
        /// Static preset dictionary mapped by personality type.
        /// </summary>
        public static readonly Dictionary<PersonalityType, BotPersonalityProfile> Presets;

        static BotPersonalityPresets()
        {
            PersonalityType[] types = (PersonalityType[])Enum.GetValues(typeof(PersonalityType));
            Presets = new Dictionary<PersonalityType, BotPersonalityProfile>(types.Length);
            for (int i = 0; i < types.Length; i++)
            {
                try
                {
                    PersonalityType type = types[i];
                    Presets[type] = GenerateProfile(type);
                }
                catch (Exception ex)
                {
                    Debug.LogError("[BotPersonalityPresets] Failed to generate profile for " + types[i] + ": " + ex);
                }
            }
        }

        /// <summary>
        /// Generates a deterministic, personality-aligned profile.
        /// Values may be adjusted per type to represent distinct bot behaviors.
        /// </summary>
        /// <param name="type">The bot personality type to configure.</param>
        /// <returns>A configured bot personality profile.</returns>
        public static BotPersonalityProfile GenerateProfile(PersonalityType type)
        {
            BotPersonalityProfile p = new BotPersonalityProfile
            {
                Personality = type,
                Accuracy = 0.5f,
                AccuracyUnderFire = 0.45f,
                AggressionLevel = 0.5f,
                ReactionSpeed = 0.5f,
                ReactionTime = 0.4f,
                CommunicationLevel = 0.5f,
                Caution = 0.5f,
                FlinchThreshold = 0.5f,
                RetreatThreshold = 0.35f,
                SuppressionSensitivity = 0.5f,
                RepositionPriority = 0.5f,
                RiskTolerance = 0.5f,
                SideStepBias = 0.5f,
                FlankBias = 0.5f,
                Cohesion = 0.5f,
                SuppressiveFireBias = 0.3f,
                Greed = 0.5f,
                MovementJitter = 0.25f,
                CornerCheckPauseTime = 0.35f,
                LeanPeekFrequency = 0.5f,
                LeaningStyle = LeanPreference.Conservative,
                PreferredMission = MissionBias.Random,
                ChaosFactor = 0f,
                EngagementRange = 55f,
                StuckTolerance = 0.5f,
                Awareness = 0.5f,
                HearingBias = 0.5f,
                StanceBias = 0.0f,
                IsFearful = false,
                IsFrenzied = false,
                IsStubborn = false,
                IsSilentHunter = false,
                IsCamper = false,
                IsDumb = false
            };

            try
            {
                // Apply traits based on type (full switch block)
                switch (type)
                {
                    case PersonalityType.Adaptive:
                        p.Caution = 0.5f;
                        p.AggressionLevel = 0.6f;
                        p.CommunicationLevel = 0.8f;
                        p.ReactionSpeed = 0.75f;
                        p.SuppressiveFireBias = 0.4f;
                        p.Awareness = 0.65f;
                        p.HearingBias = 0.65f;
                        p.StanceBias = 0.25f;
                        break;
                    case PersonalityType.Aggressive:
                        p.AggressionLevel = 1f;
                        p.RetreatThreshold = 0.05f;
                        p.CommunicationLevel = 0.6f;
                        p.SuppressiveFireBias = 0.5f;
                        p.LeaningStyle = LeanPreference.Aggressive;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.3f;
                        p.Awareness = 0.85f;
                        p.HearingBias = 0.55f;
                        p.StanceBias = -0.3f;
                        break;
                    case PersonalityType.Balanced:
                        p.Accuracy = 0.7f;
                        p.AggressionLevel = 0.6f;
                        p.Caution = 0.5f;
                        p.Greed = 0.6f;
                        p.StuckTolerance = 0.6f;
                        p.Awareness = 0.6f;
                        p.HearingBias = 0.6f;
                        p.StanceBias = 0.0f;
                        break;
                    case PersonalityType.Camper:
                        p.IsCamper = true;
                        p.EngagementRange = 120f;
                        p.Accuracy = 0.85f;
                        p.SuppressionSensitivity = 0.7f;
                        p.PreferredMission = MissionBias.Loot;
                        p.LeaningStyle = LeanPreference.Never;
                        p.SuppressiveFireBias = 0.8f;
                        p.Greed = 0.8f;
                        p.StuckTolerance = 0.2f;
                        p.Awareness = 0.35f;
                        p.HearingBias = 0.35f;
                        p.StanceBias = 1.0f;
                        break;
                    case PersonalityType.Cautious:
                        p.Caution = 0.95f;
                        p.RetreatThreshold = 0.6f;
                        p.ReactionTime = 0.3f;
                        p.SuppressiveFireBias = 0.3f;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.3f;
                        p.Awareness = 0.8f;
                        p.HearingBias = 0.7f;
                        p.StanceBias = 0.5f;
                        break;
                    case PersonalityType.ColdBlooded:
                        p.FlinchThreshold = 1f;
                        p.ReactionTime = 0.3f;
                        p.Caution = 0.8f;
                        p.SuppressiveFireBias = 0.4f;
                        p.Greed = 0.3f;
                        p.StuckTolerance = 0.9f;
                        p.Awareness = 0.9f;
                        p.HearingBias = 0.6f;
                        p.StanceBias = 0.1f;
                        break;
                    case PersonalityType.Defensive:
                        p.Caution = 0.8f;
                        p.CommunicationLevel = 0.9f;
                        p.RetreatThreshold = 0.5f;
                        p.SuppressiveFireBias = 0.5f;
                        p.Greed = 0.3f;
                        p.StuckTolerance = 0.7f;
                        p.Awareness = 0.7f;
                        p.HearingBias = 0.65f;
                        p.StanceBias = 0.7f;
                        break;
                    case PersonalityType.Dumb:
                        p.IsDumb = true;
                        p.Accuracy = 0.3f;
                        p.AggressionLevel = 0.2f;
                        p.ReactionSpeed = 0.25f;
                        p.LeaningStyle = LeanPreference.Never;
                        p.SuppressiveFireBias = 0.1f;
                        p.Greed = 0.2f;
                        p.StuckTolerance = 0.1f;
                        p.Awareness = 0.25f;
                        p.HearingBias = 0.25f;
                        p.StanceBias = -0.2f;
                        break;
                    case PersonalityType.Explorer:
                        p.EngagementRange = 110f;
                        p.RiskTolerance = 0.9f;
                        p.Caution = 0.3f;
                        p.PreferredMission = MissionBias.Quest;
                        p.LeaningStyle = LeanPreference.Aggressive;
                        p.SuppressiveFireBias = 0.4f;
                        p.Greed = 0.6f;
                        p.StuckTolerance = 0.8f;
                        p.Awareness = 0.7f;
                        p.HearingBias = 0.6f;
                        p.StanceBias = 0.0f;
                        break;
                    case PersonalityType.Fearful:
                        p.IsFearful = true;
                        p.Accuracy = 0.4f;
                        p.RetreatThreshold = 0.7f;
                        p.Caution = 0.9f;
                        p.AggressionLevel = 0.1f;
                        p.PreferredMission = MissionBias.Loot;
                        p.SuppressiveFireBias = 0.25f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.2f;
                        p.Awareness = 0.85f;
                        p.HearingBias = 0.8f;
                        p.StanceBias = 0.75f;
                        break;
                    case PersonalityType.Frenzied:
                        p.IsFrenzied = true;
                        p.AggressionLevel = 1f;
                        p.ChaosFactor = 1f;
                        p.Accuracy = 0.45f;
                        p.AccuracyUnderFire = 0.2f;
                        p.PreferredMission = MissionBias.Fight;
                        p.LeaningStyle = LeanPreference.Aggressive;
                        p.SuppressiveFireBias = 0.1f;
                        p.Greed = 0.3f;
                        p.StuckTolerance = 0.1f;
                        p.Awareness = 0.3f;
                        p.HearingBias = 0.25f;
                        p.StanceBias = -0.5f;
                        break;
                    case PersonalityType.Greedy:
                        p.RiskTolerance = 0.8f;
                        p.Cohesion = 0.4f;
                        p.PreferredMission = MissionBias.Loot;
                        p.SuppressiveFireBias = 0.3f;
                        p.Greed = 1f;
                        p.StuckTolerance = 0.4f;
                        p.Awareness = 0.55f;
                        p.HearingBias = 0.5f;
                        p.StanceBias = 0.0f;
                        break;
                    case PersonalityType.Heroic:
                        p.AggressionLevel = 0.8f;
                        p.RiskTolerance = 0.85f;
                        p.CommunicationLevel = 1f;
                        p.Cohesion = 1f;
                        p.FlankBias = 0.6f;
                        p.LeaningStyle = LeanPreference.Aggressive;
                        p.SuppressiveFireBias = 0.7f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.8f;
                        p.Awareness = 0.95f;
                        p.HearingBias = 0.7f;
                        p.StanceBias = 0.0f;
                        break;
                    case PersonalityType.Loner:
                        p.Cohesion = 0f;
                        p.CommunicationLevel = 0.1f;
                        p.SuppressiveFireBias = 0.1f;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.3f;
                        p.Awareness = 0.55f;
                        p.HearingBias = 0.45f;
                        p.StanceBias = 0.0f;
                        break;
                    case PersonalityType.Methodical:
                        p.Caution = 0.75f;
                        p.MovementJitter = 0.1f;
                        p.LeanPeekFrequency = 0.7f;
                        p.CornerCheckPauseTime = 0.5f;
                        p.SuppressiveFireBias = 0.6f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.6f;
                        p.Awareness = 0.7f;
                        p.HearingBias = 0.7f;
                        p.StanceBias = 0.4f;
                        break;
                    case PersonalityType.Paranoid:
                        p.ReactionSpeed = 0.85f;
                        p.Caution = 0.95f;
                        p.FlinchThreshold = 0.9f;
                        p.SideStepBias = 0.6f;
                        p.SuppressiveFireBias = 0.5f;
                        p.Greed = 0.3f;
                        p.StuckTolerance = 0.4f;
                        p.Awareness = 1.0f;
                        p.HearingBias = 1.0f;
                        p.StanceBias = 0.7f;
                        break;
                    case PersonalityType.Patient:
                        p.ReactionTime = 0.5f;
                        p.Accuracy = 0.9f;
                        p.SuppressiveFireBias = 0.4f;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.7f;
                        p.Awareness = 0.65f;
                        p.HearingBias = 0.7f;
                        p.StanceBias = 0.2f;
                        break;
                    case PersonalityType.Reckless:
                        p.AggressionLevel = 0.95f;
                        p.RetreatThreshold = 0f;
                        p.ChaosFactor = 0.8f;
                        p.SuppressiveFireBias = 0.3f;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.2f;
                        p.Awareness = 0.4f;
                        p.HearingBias = 0.3f;
                        p.StanceBias = -0.5f;
                        break;
                    case PersonalityType.RiskTaker:
                        p.RiskTolerance = 1f;
                        p.RetreatThreshold = 0.1f;
                        p.AggressionLevel = 0.7f;
                        p.SuppressiveFireBias = 0.35f;
                        p.Greed = 0.6f;
                        p.StuckTolerance = 0.3f;
                        p.Awareness = 0.45f;
                        p.HearingBias = 0.55f;
                        p.StanceBias = -0.2f;
                        break;
                    case PersonalityType.SilentHunter:
                        p.IsSilentHunter = true;
                        p.Accuracy = 0.95f;
                        p.CommunicationLevel = 0.1f;
                        p.PreferredMission = MissionBias.Quest;
                        p.LeaningStyle = LeanPreference.Never;
                        p.SuppressiveFireBias = 0.0f;
                        p.Greed = 0.3f;
                        p.StuckTolerance = 0.7f;
                        p.Awareness = 0.9f;
                        p.HearingBias = 0.9f;
                        p.StanceBias = 0.7f;
                        break;
                    case PersonalityType.Sniper:
                        p.EngagementRange = 130f;
                        p.Accuracy = 0.95f;
                        p.FlinchThreshold = 0.2f;
                        p.LeaningStyle = LeanPreference.Aggressive;
                        p.SuppressiveFireBias = 0.3f;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.6f;
                        p.Awareness = 0.85f;
                        p.HearingBias = 0.6f;
                        p.StanceBias = 1.0f;
                        break;
                    case PersonalityType.Strategic:
                        p.Caution = 0.7f;
                        p.CommunicationLevel = 0.9f;
                        p.FlankBias = 0.8f;
                        p.SuppressiveFireBias = 0.5f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.7f;
                        p.Awareness = 0.8f;
                        p.HearingBias = 0.75f;
                        p.StanceBias = 0.5f;
                        break;
                    case PersonalityType.Stubborn:
                        p.IsStubborn = true;
                        p.RetreatThreshold = 0f;
                        p.Cohesion = 0.2f;
                        p.SuppressiveFireBias = 0.5f;
                        p.Greed = 0.3f;
                        p.StuckTolerance = 0.8f;
                        p.Awareness = 0.5f;
                        p.HearingBias = 0.5f;
                        p.StanceBias = 0.0f;
                        break;
                    case PersonalityType.Tactical:
                        p.Accuracy = 0.85f;
                        p.FlinchThreshold = 0.6f;
                        p.RepositionPriority = 0.9f;
                        p.SuppressiveFireBias = 0.6f;
                        p.Greed = 0.6f;
                        p.StuckTolerance = 0.7f;
                        p.Awareness = 0.7f;
                        p.HearingBias = 0.7f;
                        p.StanceBias = 0.3f;
                        break;
                    case PersonalityType.TeamPlayer:
                        p.CommunicationLevel = 1f;
                        p.Cohesion = 1f;
                        p.RiskTolerance = 0.5f;
                        p.SuppressiveFireBias = 0.45f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.8f;
                        p.Awareness = 0.8f;
                        p.HearingBias = 0.85f;
                        p.StanceBias = 0.25f;
                        break;
                    case PersonalityType.Unpredictable:
                        p.ChaosFactor = 1f;
                        p.SuppressiveFireBias = 0.3f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.3f;
                        p.Awareness = 0.3f;
                        p.HearingBias = 0.3f;
                        p.StanceBias = 0.0f;
                        break;
                    case PersonalityType.Vengeful:
                        p.AggressionLevel = 0.9f;
                        p.CommunicationLevel = 0.2f;
                        p.RetreatThreshold = 0.1f;
                        p.SuppressiveFireBias = 0.4f;
                        p.Greed = 0.6f;
                        p.StuckTolerance = 0.6f;
                        p.Awareness = 0.6f;
                        p.HearingBias = 0.5f;
                        p.StanceBias = 0.0f;
                        break;
                    case PersonalityType.Vigilant:
                        p.ReactionSpeed = 1f;
                        p.ReactionTime = 0.15f;
                        p.FlinchThreshold = 0.65f;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.7f;
                        p.Awareness = 1.0f;
                        p.HearingBias = 0.95f;
                        p.StanceBias = 0.2f;
                        break;
                    case PersonalityType.Calculating:
                        p.FlinchThreshold = 0.8f;
                        p.Caution = 0.7f;
                        p.RepositionPriority = 1f;
                        p.SuppressiveFireBias = 0.5f;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.9f;
                        p.Awareness = 0.75f;
                        p.HearingBias = 0.8f;
                        p.StanceBias = 0.1f;
                        break;
                    case PersonalityType.Panicked:
                        p.FlinchThreshold = 0.1f;
                        p.ReactionSpeed = 0.95f;
                        p.Caution = 1f;
                        p.ChaosFactor = 1f;
                        p.RetreatThreshold = 0.9f;
                        p.SuppressiveFireBias = 0.2f;
                        p.LeaningStyle = LeanPreference.Never;
                        p.Greed = 0.3f;
                        p.StuckTolerance = 0.2f;
                        p.Awareness = 0.2f;
                        p.HearingBias = 0.6f;
                        p.StanceBias = 0.85f;
                        break;
                    case PersonalityType.Stoic:
                        p.FlinchThreshold = 1f;
                        p.ReactionTime = 0.35f;
                        p.MovementJitter = 0f;
                        p.SuppressiveFireBias = 0.3f;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.8f;
                        p.Awareness = 0.8f;
                        p.HearingBias = 0.7f;
                        p.StanceBias = 0.0f;
                        break;
                    case PersonalityType.Bulldozer:
                        p.AggressionLevel = 1f;
                        p.RetreatThreshold = 0f;
                        p.FlinchThreshold = 0.9f;
                        p.SuppressiveFireBias = 0.6f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.3f;
                        p.Awareness = 0.55f;
                        p.HearingBias = 0.5f;
                        p.StanceBias = -0.6f;
                        break;
                    case PersonalityType.Covert:
                        p.PreferredMission = MissionBias.Quest;
                        p.CommunicationLevel = 0.1f;
                        p.SuppressiveFireBias = 0.1f;
                        p.LeaningStyle = LeanPreference.Never;
                        p.Greed = 0.3f;
                        p.StuckTolerance = 0.6f;
                        p.Awareness = 0.9f;
                        p.HearingBias = 0.95f;
                        p.StanceBias = 0.5f;
                        break;
                    case PersonalityType.Cowardly:
                        p.Caution = 1f;
                        p.RetreatThreshold = 1f;
                        p.AggressionLevel = 0f;
                        p.SuppressiveFireBias = 0.0f;
                        p.LeaningStyle = LeanPreference.Never;
                        p.Greed = 0.2f;
                        p.StuckTolerance = 0.2f;
                        p.Awareness = 0.85f;
                        p.HearingBias = 0.9f;
                        p.StanceBias = 0.8f;
                        break;
                    case PersonalityType.Disruptor:
                        p.ChaosFactor = 1f;
                        p.AggressionLevel = 0.6f;
                        p.SuppressiveFireBias = 0.7f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.4f;
                        p.Awareness = 0.4f;
                        p.HearingBias = 0.5f;
                        p.StanceBias = -0.3f;
                        break;
                    case PersonalityType.Supportive:
                        p.CommunicationLevel = 1f;
                        p.FlankBias = 0.5f;
                        p.SuppressiveFireBias = 0.75f;
                        p.Cohesion = 1f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.9f;
                        p.Awareness = 0.7f;
                        p.HearingBias = 0.9f;
                        p.StanceBias = 0.1f;
                        break;
                    case PersonalityType.Hunter:
                        p.Accuracy = 0.85f;
                        p.PreferredMission = MissionBias.Fight;
                        p.SuppressiveFireBias = 0.4f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.6f;
                        p.Awareness = 0.8f;
                        p.HearingBias = 0.6f;
                        p.StanceBias = 0.2f;
                        break;
                    case PersonalityType.Stalker:
                        p.Accuracy = 0.8f;
                        p.Caution = 0.6f;
                        p.SuppressiveFireBias = 0.3f;
                        p.Greed = 0.6f;
                        p.StuckTolerance = 0.6f;
                        p.Awareness = 0.65f;
                        p.HearingBias = 0.8f;
                        p.StanceBias = 0.5f;
                        break;
                    case PersonalityType.Vigilante:
                        p.AggressionLevel = 0.7f;
                        p.FlankBias = 0.7f;
                        p.SuppressiveFireBias = 0.6f;
                        p.LeaningStyle = LeanPreference.Aggressive;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.7f;
                        p.Awareness = 0.85f;
                        p.HearingBias = 0.8f;
                        p.StanceBias = -0.1f;
                        break;
                    case PersonalityType.Sentinel:
                        p.RepositionPriority = 0f;
                        p.Cohesion = 0.8f;
                        p.SuppressiveFireBias = 0.6f;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.8f;
                        p.Awareness = 0.7f;
                        p.HearingBias = 0.65f;
                        p.StanceBias = 0.8f;
                        break;
                    case PersonalityType.Erratic:
                        p.ChaosFactor = 1f;
                        p.AggressionLevel = 0.5f;
                        p.Caution = 0.5f;
                        p.SuppressiveFireBias = 0.4f;
                        p.Greed = 0.5f;
                        p.StuckTolerance = 0.4f;
                        p.Awareness = 0.5f;
                        p.HearingBias = 0.35f;
                        p.StanceBias = 0.0f;
                        break;
                    case PersonalityType.Cowboy:
                        p.AggressionLevel = 0.9f;
                        p.Cohesion = 0.1f;
                        p.SuppressiveFireBias = 0.2f;
                        p.LeaningStyle = LeanPreference.Aggressive;
                        p.Greed = 0.4f;
                        p.StuckTolerance = 0.5f;
                        p.Awareness = 0.6f;
                        p.HearingBias = 0.5f;
                        p.StanceBias = -0.4f;
                        break;
                    case PersonalityType.Saboteur:
                        p.PreferredMission = MissionBias.Loot;
                        p.CommunicationLevel = 0.3f;
                        p.RiskTolerance = 0.9f;
                        p.SuppressiveFireBias = 0.2f;
                        p.LeaningStyle = LeanPreference.Never;
                        p.Greed = 0.9f;
                        p.StuckTolerance = 0.3f;
                        p.Awareness = 0.3f;
                        p.HearingBias = 0.6f;
                        p.StanceBias = 0.3f;
                        break;
                        // Unknown/future enum values safely use defaults.
                }
            }
            catch (Exception ex)
            {
                Debug.LogError("[BotPersonalityPresets] GenerateProfile trait switch failed for " + type + ": " + ex);
                // Profile p is still valid, using defaults.
            }

            try
            {
                ApplyRandomBlend(p);
            }
            catch (Exception ex)
            {
                Debug.LogError("[BotPersonalityPresets] GenerateProfile ApplyRandomBlend failed: " + ex);
            }

            return p;
        }

        /// <summary>
        /// Applies randomized trait blending to add variance within safe bounds.
        /// Used after base personality profile generation to simulate organic differences.
        /// Now includes Awareness, HearingBias, StanceBias blending and clamping.
        /// </summary>
        private static void ApplyRandomBlend(BotPersonalityProfile p)
        {
            const float Min = 0f;
            const float Max = 1f;

            try
            {
                p.Accuracy += UnityEngine.Random.Range(-0.1f, 0.15f);
                p.AggressionLevel += UnityEngine.Random.Range(-0.1f, 0.15f);
                p.Cohesion += UnityEngine.Random.Range(-0.2f, 0.2f);
                p.CommunicationLevel += UnityEngine.Random.Range(-0.1f, 0.15f);
                p.MovementJitter += UnityEngine.Random.Range(-0.1f, 0.15f);
                p.LeanPeekFrequency += UnityEngine.Random.Range(-0.2f, 0.2f);
                p.CornerCheckPauseTime += UnityEngine.Random.Range(-0.1f, 0.15f);
                p.SideStepBias += UnityEngine.Random.Range(-0.15f, 0.2f);
                p.ReactionSpeed += UnityEngine.Random.Range(-0.1f, 0.1f);
                p.ReactionTime += UnityEngine.Random.Range(-0.05f, 0.1f);
                p.FlankBias += UnityEngine.Random.Range(-0.1f, 0.15f);
                p.SuppressionSensitivity += UnityEngine.Random.Range(-0.1f, 0.1f);
                p.FlinchThreshold += UnityEngine.Random.Range(-0.1f, 0.1f);
                p.RetreatThreshold += UnityEngine.Random.Range(-0.1f, 0.1f);
                p.RepositionPriority += UnityEngine.Random.Range(-0.1f, 0.1f);
                p.RiskTolerance += UnityEngine.Random.Range(-0.1f, 0.1f);
                p.SuppressiveFireBias += UnityEngine.Random.Range(-0.05f, 0.1f);
                p.Greed += UnityEngine.Random.Range(-0.1f, 0.15f);
                p.StuckTolerance += UnityEngine.Random.Range(-0.1f, 0.15f);
                // Realism extension:
                p.Awareness += UnityEngine.Random.Range(-0.1f, 0.1f);
                p.HearingBias += UnityEngine.Random.Range(-0.1f, 0.1f);
                p.StanceBias += UnityEngine.Random.Range(-0.2f, 0.2f);
            }
            catch (Exception ex)
            {
                Debug.LogError("[BotPersonalityPresets] ApplyRandomBlend: Randomization failed: " + ex);
            }

            // Always clamp, including new fields
            try
            {
                p.Accuracy = Mathf.Clamp(p.Accuracy, Min, Max);
                p.AggressionLevel = Mathf.Clamp(p.AggressionLevel, Min, Max);
                p.Cohesion = Mathf.Clamp(p.Cohesion, Min, Max);
                p.CommunicationLevel = Mathf.Clamp(p.CommunicationLevel, Min, Max);
                p.MovementJitter = Mathf.Clamp(p.MovementJitter, 0f, 0.5f);
                p.LeanPeekFrequency = Mathf.Clamp(p.LeanPeekFrequency, Min, Max);
                p.CornerCheckPauseTime = Mathf.Clamp(p.CornerCheckPauseTime, 0.1f, 0.6f);
                p.SideStepBias = Mathf.Clamp(p.SideStepBias, Min, Max);
                p.ReactionSpeed = Mathf.Clamp(p.ReactionSpeed, Min, Max);
                p.ReactionTime = Mathf.Clamp(p.ReactionTime, 0.1f, 0.5f);
                p.FlankBias = Mathf.Clamp(p.FlankBias, Min, Max);
                p.SuppressionSensitivity = Mathf.Clamp(p.SuppressionSensitivity, Min, Max);
                p.FlinchThreshold = Mathf.Clamp(p.FlinchThreshold, Min, Max);
                p.RetreatThreshold = Mathf.Clamp(p.RetreatThreshold, Min, Max);
                p.RepositionPriority = Mathf.Clamp(p.RepositionPriority, Min, Max);
                p.RiskTolerance = Mathf.Clamp(p.RiskTolerance, Min, Max);
                p.SuppressiveFireBias = Mathf.Clamp(p.SuppressiveFireBias, Min, Max);
                p.Greed = Mathf.Clamp(p.Greed, Min, Max);
                p.StuckTolerance = Mathf.Clamp(p.StuckTolerance, Min, Max);
                // Realism extension:
                p.Awareness = Mathf.Clamp(p.Awareness, Min, Max);
                p.HearingBias = Mathf.Clamp(p.HearingBias, Min, Max);
                p.StanceBias = Mathf.Clamp(p.StanceBias, -1.0f, 2.0f); // -1 = standing, 0 = neutral, 1 = crouch, 2 = prone
            }
            catch (Exception ex)
            {
                Debug.LogError("[BotPersonalityPresets] ApplyRandomBlend: Clamping failed: " + ex);
            }
        }
    }
}

