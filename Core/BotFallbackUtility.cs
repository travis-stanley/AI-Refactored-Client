// <auto-generated>
//   This file is part of AI-Refactored, an open-source project focused on realistic AI behavior in Escape from Tarkov.
//   Licensed under the MIT License. See LICENSE in the repository root for more information.
//
//   THIS FILE IS SYSTEMATICALLY MANAGED.
//   Failures in AIRefactored logic must always trigger safe fallback to EFT base AI.
// </auto-generated>

namespace AIRefactored.Core
{
    using System.Collections.Generic;
    using BepInEx.Logging;
    using EFT;
    using UnityEngine;

    /// <summary>
    /// Provides safe fallback to native EFT bot AI when AIRefactored systems fail.
    /// Prevents dead bots by enabling native logic on exception or critical failure.
    /// </summary>
    public static class BotFallbackUtility
    {
        #region Fields

        private static readonly ManualLogSource Logger = Plugin.LoggerInstance;
        private static readonly HashSet<string> FallbackBots = new HashSet<string>();

        #endregion

        #region API

        /// <summary>
        /// Fully disables AIRefactored logic and activates base EFT AI for this bot.
        /// </summary>
        /// <param name="bot">The bot owner instance.</param>
        public static void FallbackToEFTLogic(BotOwner bot)
        {
            if (bot == null || bot.IsDead)
            {
                return;
            }

            Player player = bot.GetPlayer;
            if (player == null || player.Profile == null)
            {
                return;
            }

            string profileId = player.Profile.Id;
            if (string.IsNullOrEmpty(profileId) || FallbackBots.Contains(profileId))
            {
                return;
            }

            FallbackBots.Add(profileId);

            StandartBotBrain brain = player.GetComponent<StandartBotBrain>();
            if (brain != null)
            {
                brain.Activate();
                Logger.LogWarning("[BotFallback] ✅ Bot " + profileId + " reverted to native EFT AI (StandartBotBrain).");
            }
            else
            {
                Logger.LogError("[BotFallback] ❌ Bot " + profileId + " missing StandartBotBrain — fallback failed.");
            }
        }

        #endregion
    }
}