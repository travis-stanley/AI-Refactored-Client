// <auto-generated>
//   This file is part of AI-Refactored, an open-source project focused on realistic AI behavior in Escape from Tarkov.
//   Licensed under the MIT License. See LICENSE in the repository root for more information.
//
//   THIS FILE IS SYSTEMATICALLY MANAGED.
//   Please follow strict StyleCop, ReSharper, and AI-Refactored code standards for all modifications.
// </auto-generated>

namespace AIRefactored.AI.Navigation
{
    using System;
    using System.Threading;

    /// <summary>
    /// Tracks global NavMesh readiness for AIRefactored movement systems.
    /// Prevents bots from executing navigation before mesh is baked.
    /// </summary>
    public static class NavMeshStatus
    {
        #region State

        private static int _isReadyFlag = 0;

        #endregion

        #region Properties

        /// <summary>
        /// Gets a value indicating whether the NavMesh is built and safe to use.
        /// </summary>
        public static bool IsReady
        {
            get { return Interlocked.CompareExchange(ref _isReadyFlag, 0, 0) == 1; }
        }

        #endregion

        #region Control Methods

        /// <summary>
        /// Flags NavMesh as initialized and ready for movement logic.
        /// Called after NavMeshSurface.BuildNavMesh().
        /// </summary>
        public static void SetReady()
        {
            Interlocked.Exchange(ref _isReadyFlag, 1);
        }

        /// <summary>
        /// Resets NavMesh ready state before world load or raid switch.
        /// </summary>
        public static void Reset()
        {
            Interlocked.Exchange(ref _isReadyFlag, 0);
        }

        #endregion
    }
}